{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pokemon-details/pokemon-details.component.ts","webpack:///src/app/pokemon-details/pokemon-details.component.html","webpack:///src/app/pokemon-list/pokemon-list.component.ts","webpack:///src/app/pokemon-list/pokemon-list.component.html","webpack:///src/app/services/pokemon.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","AppRoutingModule","forRoot","scrollPositionRestoration","anchorScrolling","declarations","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","providers","bootstrap","PokemonDetailsComponent","service","route","paramMap","subscribe","params","loadData","get","name","getPokemon","data","pokemon","PokemonListComponent","offset","getPoko","getPokemonList","pokemons","results","forEach","pokemonInfo","console","log","loadMore","PokemonService","http","apiUrl","pipe","handleError","error","ErrorEvent","message","status","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PokemonListComponent } from './pokemon-list/pokemon-list.component';\nimport { PokemonDetailsComponent } from './pokemon-details/pokemon-details.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PokemonListComponent,\n    children: [{ path: 'pokemon/:id', component: PokemonDetailsComponent }],\n  },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes, {\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled',\n    }),\n  ],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'testTaskPokedex';\n}\n","<div class=\"wrapper\">\r\n  <p class=\"title\">Pokedex</p>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { PokemonListComponent } from './pokemon-list/pokemon-list.component';\nimport { PokemonDetailsComponent } from './pokemon-details/pokemon-details.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PokemonService } from './services/pokemon.service';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\n@NgModule({\n  declarations: [AppComponent, PokemonListComponent, PokemonDetailsComponent],\n\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserModule,\n    RouterModule,\n    AppRoutingModule,\n  ],\n  providers: [PokemonService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Pokemon } from '../models/pokemon';\nimport { PokemonService } from '../services/pokemon.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-pokemon-details',\n  templateUrl: './pokemon-details.component.html',\n  styleUrls: ['./pokemon-details.component.scss'],\n})\nexport class PokemonDetailsComponent implements OnInit {\n  pokemon: Pokemon;\n  constructor(private service: PokemonService, private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((params) => {\n      this.loadData(params.get('id'));\n    });\n  }\n\n  loadData(name: string) {\n    this.service\n      .getPokemon(name)\n      .subscribe((data: Pokemon) => (this.pokemon = data));\n  }\n}\n","<div class=\"container pokemon-detail\">\n  <div class=\"card\" *ngIf=\"pokemon\">\n    <div class=\"pokemon-baseinfo\">\n      <img\n        class=\"card-img-top\"\n        [src]=\"pokemon.sprites.front_default\"\n        alt=\"Pokemon\"\n      />\n      <div class=\"card-name\">\n        {{ pokemon.name }}<span> #</span> {{ pokemon.id }}\n      </div>\n    </div>\n    <div *ngIf=\"pokemon?.stats\" class=\"pokemon-info\">\n      <div class=\"table\">\n        <span>Type: </span>\n        <div\n          class=\"styleType\"\n          *ngFor=\"let type of pokemon.types\"\n          [ngClass]=\"type.type.name\"\n        >\n          {{ type.type.name }}\n        </div>\n      </div>\n\n      <div class=\"table\" *ngFor=\"let stat of pokemon.stats\">\n        <div class=\"pokemon-stat\">{{ stat.stat.name }}</div>\n        <div>{{ stat.base_stat }}</div>\n      </div>\n      <div class=\"table\">\n        <span>weight</span>\n        <div>{{ pokemon.weight }}</div>\n      </div>\n      <div class=\"table\">\n        <span>Total moves</span>\n        <div>{{ pokemon.moves.length }}</div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PokemonService } from '../services/pokemon.service';\nimport { Pokemons } from '../models/pokemons';\nimport { Pokemon } from '../models/pokemon';\n\n@Component({\n  selector: 'app-pokemon-list',\n  templateUrl: './pokemon-list.component.html',\n  styleUrls: ['./pokemon-list.component.scss'],\n})\nexport class PokemonListComponent implements OnInit {\n  pokemons: Pokemons;\n  pokemon: Pokemon;\n  offset = 12;\n\n  constructor(private service: PokemonService) {}\n\n  ngOnInit(): void {\n    this.getPoko();\n  }\n\n  getPoko() {\n    this.service.getPokemonList(this.offset).subscribe((pokemons: Pokemons) => {\n      this.pokemons = pokemons;\n      this.pokemons.results.forEach((pokemonInfo) => {\n        this.service\n          .getPokemon(pokemonInfo.name)\n          .subscribe((pokemon: Pokemon) => (pokemonInfo.pokemon = pokemon));\n      });\n    });\n  }\n  loadMore() {\n    this.offset = this.offset + 12;\n    this.service.getPokemonList(this.offset).subscribe((pokemons: Pokemons) => {\n      this.pokemons = pokemons;\n      this.pokemons.results.forEach((pokemonInfo) => {\n        this.service\n          .getPokemon(pokemonInfo.name)\n          .subscribe((pokemon: Pokemon) => (pokemonInfo.pokemon = pokemon));\n      });\n    });\n    console.log(this.offset);\n  }\n}\n","<div class=\"wrapper pokemons-list\">\n  <div *ngIf=\"!pokemons\" class=\"card-deck\">Please wait</div>\n\n  <div class=\"container list\" *ngIf=\"pokemons\">\n    <div\n      class=\"card\"\n      *ngFor=\"let pokemonInfo of pokemons.results\"\n      (mouseover)=\"pokemonInfo.over = true\"\n      (mouseleave)=\"pokemonInfo.over = false\"\n      [fragment]=\"'promotions'\"\n      [routerLink]=\"['/pokemon/', pokemonInfo.name]\"\n    >\n      <div class=\"card-img\">\n        <img\n          *ngIf=\"\n            pokemonInfo.pokemon != null &&\n            pokemonInfo.pokemon.sprites.front_default\n          \"\n          class=\"card-img-top\"\n          [src]=\"pokemonInfo.pokemon.sprites.front_default\"\n          alt=\"Pokemon\"\n        />\n      </div>\n\n      <div class=\"card-name\">{{ pokemonInfo.name }}</div>\n\n      <div class=\"flexPosition\" *ngIf=\"pokemonInfo.pokemon?.types\">\n        <div\n          class=\"styleType\"\n          *ngFor=\"let type of pokemonInfo.pokemon.types\"\n          [ngClass]=\"type.type.name\"\n        >\n          {{ type.type.name }}\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div id=\"promotions\" class=\"container item\">\n    <router-outlet></router-outlet>\n  </div>\n\n  <div class=\"container\" (click)=\"loadMore()\">\n    <label\n      class=\"action-button shadow animate blue\"\n      for=\"expanded\"\n      role=\"button\"\n      >Load More</label\n    >\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, from, throwError } from 'rxjs';\nimport { Pokemons } from '../models/pokemons';\nimport { Pokemon } from '../models/pokemon';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PokemonService {\n  apiUrl = 'https://pokeapi.co/api/v2/';\n\n  constructor(private http: HttpClient) {}\n\n  getPokemonList(offset): Observable<any> {\n    return this.http.get<Pokemons>(`${this.apiUrl}pokemon?limit=${offset}`);\n  }\n\n  getPokemon(id: string | number) {\n    return this.http\n      .get<Pokemon>(`${this.apiUrl}pokemon/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` + `body was: ${error.error}`\n      );\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}